// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using libreria_data;

#nullable disable

namespace libreria_data.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("libreria_publica_Data.Models.catalogs.Clasificaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("LibrosId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("LibrosId");

                    b.ToTable("Clasificaciones");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.catalogs.Generos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("LibrosId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("LibrosId");

                    b.ToTable("Impuesto");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.library.Libros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TransaccionesLibroid")
                        .HasColumnType("int");

                    b.Property<int>("hojas")
                        .HasColumnType("int");

                    b.Property<int>("numLibros")
                        .HasColumnType("int");

                    b.Property<int>("soloUsers")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("trama")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("TransaccionesLibroid");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.security.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RolesUserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolesUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.security.RolesUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("RolesUser");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.security.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RolesUserId")
                        .HasColumnType("int");

                    b.Property<int?>("TransaccionesLibroid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RolesUserId");

                    b.HasIndex("TransaccionesLibroid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("libreria_publica_DataLayer.Models.catalogs.Personas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AMaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("APaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TransaccionesLibroid")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("TransaccionesLibroid");

                    b.HasIndex("UserId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("libreria_publica_DataLayer.Models.operations.TransaccionesLibro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("FechaRegreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("TransaccionesLibro");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.catalogs.Clasificaciones", b =>
                {
                    b.HasOne("libreria_publica_Data.Models.library.Libros", null)
                        .WithMany("clasificacion")
                        .HasForeignKey("LibrosId");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.catalogs.Generos", b =>
                {
                    b.HasOne("libreria_publica_Data.Models.library.Libros", null)
                        .WithMany("Genero")
                        .HasForeignKey("LibrosId");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.library.Libros", b =>
                {
                    b.HasOne("libreria_publica_DataLayer.Models.operations.TransaccionesLibro", null)
                        .WithMany("Libro")
                        .HasForeignKey("TransaccionesLibroid");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.security.Rol", b =>
                {
                    b.HasOne("libreria_publica_Data.Models.security.RolesUser", null)
                        .WithMany("rols")
                        .HasForeignKey("RolesUserId");

                    b.HasOne("libreria_publica_Data.Models.security.User", null)
                        .WithMany("rol")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.security.User", b =>
                {
                    b.HasOne("libreria_publica_Data.Models.security.RolesUser", null)
                        .WithMany("Users")
                        .HasForeignKey("RolesUserId");

                    b.HasOne("libreria_publica_DataLayer.Models.operations.TransaccionesLibro", null)
                        .WithMany("User")
                        .HasForeignKey("TransaccionesLibroid");
                });

            modelBuilder.Entity("libreria_publica_DataLayer.Models.catalogs.Personas", b =>
                {
                    b.HasOne("libreria_publica_DataLayer.Models.operations.TransaccionesLibro", null)
                        .WithMany("Persona")
                        .HasForeignKey("TransaccionesLibroid");

                    b.HasOne("libreria_publica_Data.Models.security.User", null)
                        .WithMany("personas")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.library.Libros", b =>
                {
                    b.Navigation("Genero");

                    b.Navigation("clasificacion");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.security.RolesUser", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("rols");
                });

            modelBuilder.Entity("libreria_publica_Data.Models.security.User", b =>
                {
                    b.Navigation("personas");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("libreria_publica_DataLayer.Models.operations.TransaccionesLibro", b =>
                {
                    b.Navigation("Libro");

                    b.Navigation("Persona");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
